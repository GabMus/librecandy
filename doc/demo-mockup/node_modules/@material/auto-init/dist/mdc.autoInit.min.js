/*!
 Material Components for the web
 Copyright (c) 2016 Google Inc.
 License: Apache-2.0
*/
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.autoInit=e():(t.mdc=t.mdc||{},t.mdc.autoInit=e())}(this,function(){return function(t){function e(r){if(o[r])return o[r].exports;var n=o[r]={exports:{},id:r,loaded:!1};return t[r].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var o={};return e.m=t,e.c=o,e.p="/assets/",e(0)}({0:function(t,e,o){t.exports=o(13)},13:function(t,e){"use strict";function o(){for(var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n,i=e.querySelectorAll("[data-mdc-auto-init]"),c=0;t=i[c];c++){var a=t.dataset.mdcAutoInit;if(!a)throw new Error("(mdc-auto-init) Constructor name must be given.");var u=r[a];if("function"!=typeof u)throw new Error("(mdc-auto-init) Could not find constructor in registry for "+a);if(t[a])o("(mdc-auto-init) Component already initialized for "+t+". Skipping...");else{var d=u.attachTo(t);Object.defineProperty(t,a,{value:d,writable:!1,enumerable:!1,configurable:!0})}}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=o;var r=Object.create(null),n=console.warn.bind(console);o.register=function(t,e){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:n;if("function"!=typeof e)throw new Error("(mdc-auto-init) Invalid Ctor value "+e+". Expected function");r[t]&&o("(mdc-auto-init) Overriding registration for "+t+" with "+e+". Was: "+r[t]),r[t]=e},o.deregister=function(t){delete r[t]},o.deregisterAll=function(){Object.keys(r).forEach(this.deregister,this)}}})});