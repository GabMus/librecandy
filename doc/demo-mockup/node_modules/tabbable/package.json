{
  "_args": [
    [
      {
        "raw": "tabbable@^1.0.3",
        "scope": null,
        "escapedName": "tabbable",
        "name": "tabbable",
        "rawSpec": "^1.0.3",
        "spec": ">=1.0.3 <2.0.0",
        "type": "range"
      },
      "/home/federico/git/librecandy/doc/demo-mockup/node_modules/focus-trap"
    ]
  ],
  "_from": "tabbable@>=1.0.3 <2.0.0",
  "_id": "tabbable@1.0.6",
  "_inCache": true,
  "_location": "/tabbable",
  "_nodeVersion": "6.10.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/tabbable-1.0.6.tgz_1492442551431_0.883700140286237"
  },
  "_npmUser": {
    "name": "davidtheclark",
    "email": "david.dave.clark@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tabbable@^1.0.3",
    "scope": null,
    "escapedName": "tabbable",
    "name": "tabbable",
    "rawSpec": "^1.0.3",
    "spec": ">=1.0.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/focus-trap"
  ],
  "_resolved": "https://registry.npmjs.org/tabbable/-/tabbable-1.0.6.tgz",
  "_shasum": "7c26a87ea6f4a25edf5edb619745a0ae740724fc",
  "_shrinkwrap": null,
  "_spec": "tabbable@^1.0.3",
  "_where": "/home/federico/git/librecandy/doc/demo-mockup/node_modules/focus-trap",
  "author": {
    "name": "David Clark"
  },
  "bugs": {
    "url": "https://github.com/davidtheclark/tabbable/issues"
  },
  "dependencies": {},
  "description": "Returns an array of all tabbable DOM nodes within a containing node.",
  "devDependencies": {
    "brfs": "^1.4.3",
    "browserify": "^13.1.1",
    "budo": "^9.2.1",
    "chai": "^3.5.0",
    "eslint": "^3.9.0",
    "karma": "^1.3.0",
    "karma-browserify": "^5.1.0",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.1",
    "mocha": "^3.2.0",
    "watchify": "^3.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7c26a87ea6f4a25edf5edb619745a0ae740724fc",
    "tarball": "https://registry.npmjs.org/tabbable/-/tabbable-1.0.6.tgz"
  },
  "gitHead": "066c65329715787f87ab89819f7b4fbbabeaa4ec",
  "homepage": "https://github.com/davidtheclark/tabbable#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "davidtheclark",
      "email": "david.dave.clark@gmail.com"
    }
  ],
  "name": "tabbable",
  "optionalDependencies": {},
  "readme": "# tabbable\n\n[![Build Status](https://travis-ci.org/davidtheclark/tabbable.svg?branch=master)](https://travis-ci.org/davidtheclark/tabbable)\n\nReturns an array of all tabbable DOM nodes within a containing node, *in their actual tab order* (cf. [Sequential focus navigation and the tabindex attribute](http://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)).\n\nThis should include\n\n- `<input>`s,\n- `<select>`s,\n- `<textarea>`s,\n- `<button>`s,\n- `<a>`s with `href` attributes *or* non-negative `tabindex`es,\n- anything else with a non-negative `tabindex`\n\nAny of the above will *not* be added to the array, though, if any of the following are also true about it:\n- negative `tabindex`\n- `disabled`\n- either the node itself *or an ancestor of it* is hidden via `display: none` or `visibility: hidden`\n\n**Note**: Though browsers allow tabbing into elements marked `contenteditable`, outstanding bugs in the `tabIndex` API prevents `tabbable` from registering them. If you have `contenteditable` elements that you need included in the array, you'll have to additionally specify `tabindex=\"0\"`.\n\n## Goals\n- Accurate\n- No dependencies\n- Small\n- Fast\n\n## Browser Support\n\nBasically IE9+.\n\nWhy? It uses [Element.querySelectorAll()](https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll) and [Window.getComputedStyle()](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle).\n\n## Installation\n\n```\nnpm install tabbable\n```\n\nDependencies: *none*.\n\nYou'll need to be compiling CommonJS (via browserify or webpack).\n\n## Usage\n\n```js\nvar tabbable = require('tabbable');\nvar arrayOfTabbableNodesInFoo = tabbable(document.getElementById('foo'));\n```\n\nSummary of ordering principles:\n- First include any elements with positive `tabindex` attributes (1 or higher), ordered by ascending `tabindex` and source order.\n- Then include any elements with a zero `tabindex` and any element that by default receives focus (listed above) and does not have a positive `tabindex` set, in source order.\n\n## Differences from jQuery UI's [`:tabbable` selector](https://api.jqueryui.com/tabbable-selector/)\n\nDoesn't need jQuery. Also: doesn't support all the old IE's.\n\nAlso: The array accounts for actual tab order.\n\nAlso: jQuery UI's `:tabbable` selector ignores elements with height and width of `0`. I'm not sure why â€” because I've found that I can still tab to those elements. So I kept them in. Only elements hidden with `display: none` or `visibility: hidden` are left out.\n\nAlso: This plugin ignores the rarely used `<area>` and `<object>` elements, which are focusable in some circumstances. (If you need them, maybe PR?)\n\n*Feedback more than welcome!*\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/davidtheclark/tabbable.git"
  },
  "scripts": {
    "debug": "budo -l -d -o test/debug.js -- -t brfs",
    "lint": "eslint .",
    "test": "karma start && npm run lint"
  },
  "version": "1.0.6"
}
