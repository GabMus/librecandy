{
  "_args": [
    [
      {
        "raw": "@material/elevation@^0.1.5",
        "scope": "@material",
        "escapedName": "@material%2felevation",
        "name": "@material/elevation",
        "rawSpec": "^0.1.5",
        "spec": ">=0.1.5 <0.2.0",
        "type": "range"
      },
      "/home/federico/git/librecandy/doc/demo-mockup/node_modules/material-components-web"
    ]
  ],
  "_from": "@material/elevation@>=0.1.5 <0.2.0",
  "_id": "@material/elevation@0.1.5",
  "_inCache": true,
  "_location": "/@material/elevation",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/elevation-0.1.5.tgz_1493653384185_0.8969637632835656"
  },
  "_npmUser": {
    "name": "amsheehan",
    "email": "alex.m.sheehan@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/elevation@^0.1.5",
    "scope": "@material",
    "escapedName": "@material%2felevation",
    "name": "@material/elevation",
    "rawSpec": "^0.1.5",
    "spec": ">=0.1.5 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@material/button",
    "/@material/card",
    "/@material/dialog",
    "/@material/drawer",
    "/@material/fab",
    "/@material/menu",
    "/@material/switch",
    "/@material/toolbar",
    "/material-components-web"
  ],
  "_resolved": "https://registry.npmjs.org/@material/elevation/-/elevation-0.1.5.tgz",
  "_shasum": "5dcfd9d79c1a09f007b3b057d89e157bbd101b4d",
  "_shrinkwrap": null,
  "_spec": "@material/elevation@^0.1.5",
  "_where": "/home/federico/git/librecandy/doc/demo-mockup/node_modules/material-components-web",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {
    "@material/animation": "^0.2.0"
  },
  "description": "Material Components for the web mixins + CSS Classes for Material Design elevation",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "5dcfd9d79c1a09f007b3b057d89e157bbd101b4d",
    "tarball": "https://registry.npmjs.org/@material/elevation/-/elevation-0.1.5.tgz"
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "elevation"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "amsheehan",
      "email": "alex.m.sheehan@gmail.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "cristobalchao",
      "email": "cchao87@gmail.com"
    },
    {
      "name": "ljepsen3541",
      "email": "ljepsen3541@gmail.com"
    },
    {
      "name": "material-admin",
      "email": "traviskaufman+npm@google.com"
    },
    {
      "name": "sgomes",
      "email": "mail@sgomes.io"
    },
    {
      "name": "traviskaufman",
      "email": "travis.kaufman@gmail.com"
    },
    {
      "name": "yeelan0319",
      "email": "yiranmao@gmail.com"
    }
  ],
  "name": "@material/elevation",
  "optionalDependencies": {},
  "readme": "# MDC Elevation\n\nMDC Elevation provides Sass mixins and CSS classes which are used to provide [shadows and\nelevation](https://material.google.com/what-is-material/elevation-shadows.html) to our material\ncomponents.\n\nThe elevation values are mapped out in a \"z-space\" and range from `0` to `24`.\nOur implementation is based on [Scott Hyndman's work](http://codepen.io/shyndman/full/ojxmdY/),\nwhich was created in collaboration with the designers on the Material Design team.\n\n> **A note about \"z-space\"**: Within the spec, elevation is normally referred to as having a `dp`\n> value. In other words, how many \"pixels\" above the base material is a piece of material elevated.\n> On a computer, this is normally represented by a 3-d coordinate system. We like `z-space` (or\n> just \"z\" for short) because it aligns with the technical definition of, and nomenclature for,\n> a 3-d coordinate system. Therefore, we feel it makes more sense than `dp`. However, when we refer\n> to `z-space` (or `z`), that can be used interchangeably with the spec's `dp`.\n\n## Installation\n\n```\nnpm install --save @material/elevation\n```\n\n## Usage\n\n### Sass Mixin\n\nMDC Elevation exports an `mdc-elevation` mixin which can be used to set the elevation on a selector.\nIt works by assigning the correct elevation value to a selector's `box-shadow` property.\n\n`mdc-elevation` takes one `$z-value` argument which represents the z-space for that given elevation. For example, [cards](https://material.google.com/components/cards.html) have a resting elevation of `2dp`. Implementing that using MDC Elevation looks like the following:\n\n```scss\n@import \"@material/elevation/mixins\";\n\n.mdc-card {\n  @include mdc-elevation(2);\n  // ...\n}\n```\n\nIt is also quite simple to alias common elevations throughout your application by leveraging this\nmixin to export classes:\n\n```scss\n$elevations: (low, medium-low, medium, medium-high, high);\n\n@for $i from 1 through length($elevations) {\n  $elev: nth($elevations, $i);\n  $z: $i * 2;\n  .my-app-elevation--#{$elev} {\n    @include mdc-elevation($z);\n  }\n}\n```\n\nNote that importing `mdc-elevation/mixins` does not output any CSS.\n\n### CSS Classes\n\nMDC Elevation also includes a CSS file that exports all z values as `mdc-elevation--z<N>` modifier\nclasses that can be easily used within HTML.\n\n> NOTE: dist/ dir will be available post-alpha in the distributed npm package.\n\n```html\n<!-- in <head> -->\n<link rel=\"stylesheet\" href=\"/path/to/mdc-elevation/dist/mdc-elevation.css\">\n<!-- ... -->\n<!-- in <body> -->\n<p class=\"mdc-elevation--z2\">Text that floats near the material surface</p>\n<p class=\"mdc-elevation--z18\">Text that floats far away from the material surface</p>\n```\n\n### Handling elevation transitions\n\nMDC Elevation includes utilities for transitioning between elevations.\n\n#### Sass functions/mixins\n\nThe `mdc-elevation-transition-rule` function takes an optional duration and optional easing curve and\nspits out a `transition` property value shorthand with `box-shadow` specified as the property, and\neither the supplied or default durations / easings for the transition.\n\nYou can also use the `mdc-elevation-transition` mixin - which takes the same arguments as the above\nfunction - to output a `transition` property with the correct values as well as a `will-change`\nproperty with `box-shadow` set.\n\n```scss\n@import \"@material/animation/variables\";\n@import \"@material/elevation/mixins\";\n\n.my-component {\n  @include mdc-elevation(2);\n  @include mdc-elevation-transition;\n\n  &--fast-transitions {\n    transition: mdc-elevation-transition-rule(180ms);\n  }\n\n  &--default-ease-transitions {\n    transition: mdc-elevation-transition-rule($mdc-elevation-transition-duration, ease);\n  }\n\n  &:focus {\n    @include mdc-elevation(4);\n  }\n\n  &:active {\n    @include mdc-elevation(8);\n  }\n}\n```\n\nIf you need more configurability over your transitions, you can easily accomplish this by using\nthe `mdc-elevation-transition-rule` function in conjunctions with the exported sass variables that\nmdc-elevation exposes for purposes of transitioning.\n\n```scss\n.my-component-with-custom-transitions {\n  @include mdc-elevation(2);\n\n  transition:\n    mdc-elevation-transition-rule(),\n    /* Configure opacity to use same duration and easing values as elevation */\n    opacity $mdc-elevation-transition-duration $mdc-elevation-transition-timing-function;\n  opacity: .7;\n  will-change: $mdc-elevation-property, opacity;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:active {\n    @include mdc-elevation(6);\n  }\n}\n```\n\n#### CSS Classes\n\nMDC Elevation also exports an `mdc-elevation-transition` CSS class which can be used within HTML.\n\n```html\n<p class=\"mdc-elevation-transition mdc-elevation--z2\">My elevation will change at some point...</p>\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "scripts": {},
  "version": "0.1.5"
}
