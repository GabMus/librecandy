{
  "_args": [
    [
      {
        "raw": "@material/list@^0.2.7",
        "scope": "@material",
        "escapedName": "@material%2flist",
        "name": "@material/list",
        "rawSpec": "^0.2.7",
        "spec": ">=0.2.7 <0.3.0",
        "type": "range"
      },
      "/home/federico/git/librecandy/doc/demo-mockup/node_modules/material-components-web"
    ]
  ],
  "_from": "@material/list@>=0.2.7 <0.3.0",
  "_id": "@material/list@0.2.7",
  "_inCache": true,
  "_location": "/@material/list",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/list-0.2.7.tgz_1493653388729_0.8135340255685151"
  },
  "_npmUser": {
    "name": "amsheehan",
    "email": "alex.m.sheehan@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/list@^0.2.7",
    "scope": "@material",
    "escapedName": "@material%2flist",
    "name": "@material/list",
    "rawSpec": "^0.2.7",
    "spec": ">=0.2.7 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@material/select",
    "/material-components-web"
  ],
  "_resolved": "https://registry.npmjs.org/@material/list/-/list-0.2.7.tgz",
  "_shasum": "0fddc1412f4e4dbfc8816fe269cbb409c217ab4b",
  "_shrinkwrap": null,
  "_spec": "@material/list@^0.2.7",
  "_where": "/home/federico/git/librecandy/doc/demo-mockup/node_modules/material-components-web",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {
    "@material/ripple": "^0.6.0",
    "@material/rtl": "^0.1.3",
    "@material/theme": "^0.1.4",
    "@material/typography": "^0.2.1"
  },
  "description": "The Material Components for the web list component",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "0fddc1412f4e4dbfc8816fe269cbb409c217ab4b",
    "tarball": "https://registry.npmjs.org/@material/list/-/list-0.2.7.tgz"
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "list"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    {
      "name": "amsheehan",
      "email": "alex.m.sheehan@gmail.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "cristobalchao",
      "email": "cchao87@gmail.com"
    },
    {
      "name": "ljepsen3541",
      "email": "ljepsen3541@gmail.com"
    },
    {
      "name": "material-admin",
      "email": "traviskaufman+npm@google.com"
    },
    {
      "name": "sgomes",
      "email": "mail@sgomes.io"
    },
    {
      "name": "traviskaufman",
      "email": "travis.kaufman@gmail.com"
    },
    {
      "name": "yeelan0319",
      "email": "yiranmao@gmail.com"
    }
  ],
  "name": "@material/list",
  "optionalDependencies": {},
  "readme": "# MDC List\n\nMDC List provides styles which implement [Material Design Lists](https://material.google.com/components/lists.html#) - \"A single continuous column of tessellated subdivisions of equal width.\" Both single-line and two-line lists are supported (with\nthree-line lists [coming soon](https://github.com/material-components/material-components-web/issues/31)). MDC\nLists are design to be accessible and RTL aware.\n\n## Installation\n\n```\nnpm install --save @material/list\n```\n\n## Usage\n\n### Basic Lists\n\nA basic lists consists simply of the list itself, and list items taking up one line.\n\n```html\n<ul class=\"mdc-list\">\n  <li class=\"mdc-list-item\">Single-line item</li>\n  <li class=\"mdc-list-item\">Single-line item</li>\n  <li class=\"mdc-list-item\">Single-line item</li>\n</ul>\n```\n\n#### RTL Support\n\nA list will flip its direction if it is _placed within an ancestor element containing a `dir`\nattribute with value `\"rtl\"`_. This applies to all lists regardless of type.\n\n```html\n<html dir=\"rtl\">\n  <!-- ... -->\n  <ul class=\"mdc-list\">\n    <!-- Hebrew for 'item in list' -->\n    <li class=\"mdc-list-item\">פריט ברשימה</li>\n  </ul>\n</html>\n```\n\n#### Dark Mode support\n\nLike other MDC-Web components, lists support dark mode either when an `mdc-list--theme-dark` class is\nattached to the root element, or the element has an ancestor with class `mdc-theme--dark`.\n\n```html\n<html class=\"mdc-theme--dark\">\n  <!-- ... -->\n  <ul class=\"mdc-list\">\n    <li class=\"mdc-list-item\">A list item on a dark background</li>\n  </ul>\n</html>\n```\n\n### \"Dense\" Lists\n\nLists can be made more compact by using the `mdc-list--dense` modifier class.\n\n```html\n<ul class=\"mdc-list mdc-list--dense\">\n  <!-- ... -->\n</ul>\n```\n\n### Two-line lists\n\nWhile in theory you can add any number of \"lines\" to a list item, you can use the `mdc-list--two-line` combined with some extra markup around the text to style a list in the two-line list style as defined by [the spec](https://material.google.com/components/lists.html#lists-specs) (see \"Two-line lists\").\n\n```html\n<ul class=\"mdc-list mdc-list--two-line\">\n  <li class=\"mdc-list-item\">\n    <span class=\"mdc-list-item__text\">\n      Two-line item\n      <span class=\"mdc-list-item__text__secondary\">Secondary text</span>\n    </span>\n  </li>\n</ul>\n```\n\n### List \"Detail\" Elements\n\nAs mentioned in the spec, lists can contain primary and secondary actions. It can also contain\nthings such as avatars, icons, interactive controls, etc. We call these items *detail* items. Lists\ncan contain 1 **start detail** item and/or 1 **end detail** item that are positioned at the start\nand end of the list, respectively. These items are correctly flipped in RTL contexts.\n\n> _N.B._ Please keep accessibility in mind when using things such as icons / icon fonts for detail\n> elements. Font Awesome has [excellent guidelines](http://fontawesome.io/accessibility/) for this.\n\n#### Adding a start detail\n\nYou can add a start detail using an element with class `mdc-list-item__start-detail` class.\n\n```html\n<ul class=\"mdc-list\">\n  <li class=\"mdc-list-item\">\n    <i class=\"mdc-list-item__start-detail material-icons\" aria-hidden=\"true\">network_wifi</i>\n    Wi-Fi\n  </li>\n  <li class=\"mdc-list-item\">\n    <i class=\"mdc-list-item__start-detail material-icons\" aria-hidden=\"true\">bluetooth</i>\n    Bluetooth\n  </li>\n  <li class=\"mdc-list-item\">\n    <i class=\"mdc-list-item__start-detail material-icons\" aria-hidden=\"true\">data_usage</i>\n    Data Usage\n  </li>\n</ul>\n```\n\n#### Making a start detail an avatar\n\nYou can use the `mdc-list--avatar-list` modifier class to style the start detail elements as what\nthe spec calls \"avatars\" - large, circular details that lend themselves well to contact images,\nprofile pictures, etc.\n\n```html\n<h2>Contacts</h2>\n<ul class=\"mdc-list mdc-list--avatar-list\">\n  <li class=\"mdc-list-item\">\n    <img class=\"mdc-list-item__start-detail\" src=\"/users/1/profile_pic.png\"\n         width=\"56\" height=\"56\" alt=\"Picture of Janet Perkins\">\n    Janet Perkins\n  </il>\n  <li class=\"mdc-list-item\">\n    <img class=\"mdc-list-item__start-detail\" src=\"/users/2/profile_pic.png\"\n         width=\"56\" height=\"56\" alt=\"Picture of Mary Johnson\">\n    Mary Johnson\n  </il>\n  <li class=\"mdc-list-item\">\n    <img class=\"mdc-list-item__start-detail\" src=\"/users/3/profile_pic.png\"\n         width=\"56\" height=\"56\" alt=\"Picture of Peter Carlsson\">\n    Peter Carlsson\n  </il>\n</ul>\n```\n\n#### Adding an end detail\n\nEnd details can be added in a similar way to start details. Place an element after the text\nwith a `mdc-list-item__end-detail` class.\n\n```html\n<h2>Contacts</h2>\n<ul class=\"mdc-list\">\n  <li class=\"mdc-list-item\">\n    Janet Perkins\n    <a href=\"#\" class=\"mdc-list-item__end-detail material-icons\"\n       aria-label=\"Remove from favorites\" title=\"Remove from favorites\">\n      favorite\n    </a>\n  </li>\n  <li class=\"mdc-list-item\">\n    Mary Johnson\n    <a href=\"#\" class=\"mdc-list-item__end-detail material-icons\"\n       aria-label=\"Add to favorites\" title=\"Add to favorites\">\n      favorite_border\n    </a>\n  </li>\n  <li class=\"mdc-list-item\">\n    Janet Perkins\n    <a href=\"#\" class=\"mdc-list-item__end-detail material-icons\"\n       aria-label=\"Add to favorites\" title=\"Add to favorites\">\n      favorite_border\n    </a>\n  </li>\n</ul>\n```\n\nStart and end details can be combined easily. Check out the list demo for many examples of how\ndetails can be configured.\n\n> NOTE: If using controls such as a switch (_TK!_) within a list detail, you may need to override\n> the width and height styles set on the detail element.\n\n### Using ink ripples for interactive lists\n\nMDC List supports adding ripples to `mdc-list-item` elements, for example in the case of a nav menu.\nTo add ripples to lists, simply attach a ripple to all list items. Note that this can be easily done\nvia `mdc-auto-init` when using the [material-components-web](../packages/material-components-web).\n\n```html\n<nav class=\"mdc-list\">\n  <a href=\"/wifi\" class=\"mdc-list-item\" data-mdc-auto-init=\"MDCRipple\">\n    <i class=\"material-icons mdc-list-item__start-detail\" aria-hidden=\"true\">\n      network_wifi\n    </i>\n    Wi-Fi\n  </a>\n  <a href=\"/bluetooth\" class=\"mdc-list-item\" data-mdc-auto-init=\"MDCRipple\">\n    <i class=\"material-icons mdc-list-item__start-detail\" aria-hidden=\"true\">\n      bluetooth\n    </i>\n    Bluetooth\n  </a>\n  <a href=\"/data-usage\" class=\"mdc-list-item\" data-mdc-auto-init=\"MDCRipple\">\n    <i class=\"material-icons mdc-list-item__start-detail\" aria-hidden=\"true\">\n      data_usage\n    </i>\n    Data Usage\n  </a>\n</nav>\n<script>\n  mdc.autoInit();\n</script>\n```\n\n### List Dividers\n\nMDC List contains an `mdc-list-divider` classes which can be used as full-width or inset\nsubdivisions either within lists themselves, or event standalone between related groups of content.\n\nTo use within lists, simply add the `mdc-list-divider` class to a list item.\n\n```html\n<ul class=\"mdc-list\">\n  <li class=\"mdc-list-item\">Item 1 - Division 1</li>\n  <li class=\"mdc-list-item\">Item 2 - Division 1</li>\n  <li class=\"mdc-list-item\">Item 3 - Division 1</li>\n  <li role=\"separator\" class=\"mdc-list-divider\"></li>\n  <li class=\"mdc-list-item\">Item 1 - Division 2</li>\n  <li class=\"mdc-list-item\">Item 1 - Division 2</li>\n</ul>\n```\n\n> Note the `role=\"separator\"` attribute on the list divider. It is important to include this so that\n> assistive technology can be made aware that this is a presentational element and is not meant to\n> be included as an item in a list. Note that `separator` is indeed [a valid role](https://w3c.github.io/html/grouping-content.html#the-li-element)\n> for `li` elements.\n\nIn order to make separators inset, add a `mdc-list-divider--inset` modifier class to it.\n\n```html\n<ul class=\"mdc-list\">\n  <li class=\"mdc-list-item\">Item 1 - Division 1</li>\n  <li class=\"mdc-list-item\">Item 2 - Division 1</li>\n  <li class=\"mdc-list-item\">Item 3 - Division 1</li>\n  <li role=\"separator\" class=\"mdc-list-divider mdc-list-divider--inset\"></li>\n  <li class=\"mdc-list-item\">Item 1 - Division 2</li>\n  <li class=\"mdc-list-item\">Item 1 - Division 2</li>\n</ul>\n```\n\nInset dividers are useful when working with lists which have start details.\n\n### List Groups\n\nMultiple related lists can be grouped together using the `mdc-list-group` class on a containing\nelement. `mdc-list-divider` elements can be used in these groups _between_ lists to help\ndifferentiate them.\n\n```html\n<div class=\"mdc-list-group\">\n  <h3 class=\"mdc-list-group__subheader\">List 1</h3>\n  <ul class=\"mdc-list\">\n    <li class=\"mdc-list-item\">Single-line item</li>\n    <li class=\"mdc-list-item\">Single-line item</li>\n    <li class=\"mdc-list-item\">Single-line item</li>\n  </ul>\n\n  <hr class=\"mdc-list-divider\">\n\n  <h3 class=\"mdc-list-group__subheader\">List 2</h3>\n  <ul class=\"mdc-list\">\n    <li class=\"mdc-list-item\">Single-line item</li>\n    <li class=\"mdc-list-item\">Single-line item</li>\n    <li class=\"mdc-list-item\">Single-line item</li>\n  </ul>\n</div>\n```\n\n### Tips/Tricks\n\n#### Bordered Lists\n\nWhile hinted at within the spec, **bordered lists** - where each list item has a border around\nit - are not officially part of the list component spec. However, they seem to be used\noften in web applications, especially those suited more for desktop. The following example shows how\nto add borders to lists.\n\n```html\n<style>\n  .my-bordered-list {\n    /* remove the side padding. we'll be placing it around the item instead. */\n    padding-right: 0;\n    padding-left: 0;\n  }\n  .my-bordered-list .mdc-list-item {\n    /* Add the list side padding padding to the list item. */\n    padding: 0 16px;\n    /* Add a border around each element. */\n    border: 1px solid rgba(0, 0, 0, .12);\n  }\n  /* Ensure adjacent borders don't collide with one another. */\n  .my-bordered-list .mdc-list-item:not(:first-child) {\n    border-top: none;\n  }\n</style>\n<!-- ... -->\n<ul class=\"mdc-list my-bordered-list\">\n  <li class=\"mdc-list-item\">Item 1</li>\n  <li class=\"mdc-list-item\">Item 2</li>\n  <li class=\"mdc-list-item\">Item 3</li>\n</ul>\n```\n\n#### Control detail item positions\n\nIn some cases, you may want start/end details to be positioned differently than the center. An\nexample of this is in [this mock](https://material-design.storage.googleapis.com/publish/material_v_9/0Bx4BSt6jniD7ckJuUHNnUVlVYTQ/components_lists_content1.png) showing a timestamp being positioned in the top-right corner\nor a list item. You can easily do this by adding an `align-self` rule to the details you'd like\nstyled this way. For example, given a `timestamp` class for an end detail:\n\n```css\n.mdc-list-item__end-detail.timestamp {\n  /* Lock to top of container. */\n  align-self: flex-start;\n}\n```\n\nAlternatively, if you have _multiple_ items you'd like to put into a detail, you can give it flex\npositioning and set its flex direction to column. This will allow you to stack items within an end\ndetail one on top of another.\n\nFor example, let's say you're building a messaging app and, naturally, you want a list of messages\nas part of your UI. You're designer wants a timestamp in the top-right corner and an \"unread\"\nindicator below it corner.\n\nThe html for this can be easily added\n\n```html\n<ul class=\"mdc-list mdc-list--two-line msgs-list\">\n  <li class=\"mdc-list-item\">\n    <span class=\"mdc-list-item__text\">\n      Ali Connors\n      <span class=\"mdc-list-item__text_secondary\">Lunch this afternoon? I was...</span>\n    </span>\n\n    <span class=\"mdc-list-item__end-detail\">\n      <time datetime=\"2014-01-28T04:36:00.000Z\">4:36pm</time>\n      <i class=\"material-icons\" arial-label=\"Unread message\">chat_bubble</i>\n    </span>\n  </li>\n  <!-- ... -->\n</ul>\n```\n\nAnd the basic CSS is relatively trivial\n\n```css\n.msgs-list .mdc-list-item__end-detail {\n  width: auto;\n  height: auto;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "scripts": {},
  "version": "0.2.7"
}
